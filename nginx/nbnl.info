server {
	listen 80;
	server_name nbnl.info;

	root /home/bart/Programming/sandbox/dp-iri-strategy;

	location = / {
		# Fall-back.
		return 200 "";
	}

	location ~* ^/data-product/(?<name>[a-zA-Z0-9_-]+)$ {
		add_header Vary "User-Agent, Accept";

		# Human.
		if ($http_user_agent ~* "^Mozilla|Chrome|Safari|Edge|Firefox") {
            # return 303 /data-product/dp_$name.html;
			return 303 https://netbeheer-nederland.github.io/docs/dp-$name/latest/index.html;
			# return 303 https://www.nbnl.info/dp-$name/  # TODO: This will be the future URL. It helps bookmarks not break and is just nice.
		}

        # Machine.
        # add_header "Content-Type" "application/yaml"; BUG: It's added to the original response, not the 303
        return 303 /data-product/dp_$name.def.dcat.ttl;  # TODO: Is this the right way? At least the "Content-Type" does not work...
        # return 303 https://raw.githubusercontent.com/Netbeheer-Nederland/dp-$name/refs/v$arg_version/dp_$name.def.dcat.yml;  # `v0` will be `main` in future.
	}

    # TODO ISSUE: For schemas: if the URI does not tell what data product the schema belongs to, how do we properly redirect to the docs?
    # Map right here, but have this file be generated by some script which follows the metadata 
	location ~* ^/schema/(?<name>[a-zA-Z0-9_-]+)/v(?<ver>[1-9]+)$ {
		add_header Vary "User-Agent, Accept";

		# Human.
		if ($http_user_agent ~* "^Mozilla|Chrome|Safari|Edge|Firefox") {
			# return 303 https://netbeheer-nederland.github.io/docs/dp-$dp/index.html;
			# return 303 https://www.nbnl.info/dp-$dp/  # TODO: This will be the future URL. It helps bookmarks not break and is just nice.
		}

        # Machine.
        return 303 /data-product/dp_$name.schema.linkml_$ver.yml;
        # return 303 https://raw.githubusercontent.com/Netbeheer-Nederland/dp-$dp/refs/v$arg_version/dp_$dp.def.dcat.yml;  # `v0` will be `main` in future.
	}
}

# TODO ISSUE: Antora renames the latest version number to `latest`, so explicitly requesting `v1.1.0` does not work for `dp-meetdata` right now.
